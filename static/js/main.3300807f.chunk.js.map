{"version":3,"sources":["Components/Navbar.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","params","className","href","type","id","Alert","props","style","height","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","App","useState","text","settext","setAlert","showAlert","message","setTimeout","class","rows","onChange","event","target","value","onClick","replace","navigator","clipboard","writeText","doc","jsPDF","save","split","filter","element","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3300807f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css';\r\nexport default function Navbar(params) {\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">GoText</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n)};\r\n","\r\nimport React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react'\nimport { jsPDF } from \"jspdf\";\nimport Alert from './Components/Alert';\n\n\n\nfunction App(props) {\n  const [text, settext] = useState('');\n\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  function onChangetext(event) {\n    settext(event.target.value);\n  }\n\n  function UpperCase() {\n    if (text !== '') {\n      settext(text.toUpperCase());\n      showAlert(\"Converted to UpperCase!\", \"success\");\n    }\n    else\n      showAlert(\"Please enter text below!\", \"info\");\n  }\n\n  function lowerCase() {\n    if (text !== '') {\n      settext(text.toLowerCase());\n      showAlert(\"Converted to lowerCase!\", \"success\");\n    }\n    else\n      showAlert(\"Please enter text below!\", \"info\");\n  }\n\n  function Copytext() {\n    if (text !== '') {\n      navigator.clipboard.writeText(text);\n      showAlert(\"Text Copied!\", \"success\");\n    }\n    else\n      showAlert(\"Please enter text below!\", \"info\");\n  }\n\n  function ExportPdf() {\n    if (text !== '') {\n      var doc = new jsPDF();\n      doc.text(text, 10, 10);\n      doc.save(\"GoText.pdf\");\n      showAlert(\"Pdf Exported!\", \"success\");\n    }\n    else\n      showAlert(\"Please enter text below!\", \"info\");\n  }\n\n  function RemoveExtraSpace() {\n    if (text !== '') {\n      settext(text.replace(/\\s+/g, ' '));\n      showAlert(\"Extra Space Removed!\", \"success\");\n    }\n\n    else\n      showAlert(\"Please enter text below!\", \"info\");\n\n  }\n  return (\n    <>\n      <Navbar />\n      <Alert alert={alert} />\n      <div class='container'>\n        <h1 className='m-1'>Enter The Text Below...</h1>\n        <textarea showAlert={showAlert} class=\"form-control  mt-2 mb-2\" id=\"exampleFormControlTextarea1\" rows=\"6\" onChange={onChangetext} value={text}></textarea>\n        <button type=\"button\" class=\"btn btn-primary m-1\" onClick={UpperCase}>UpperCase</button>\n        <button type=\"button\" class=\"btn btn-primary m-1\" onClick={lowerCase}>LowerCase</button>\n        <button type=\"button\" class=\"btn btn-primary m-1\" onClick={RemoveExtraSpace}>RemoveExtraSpace</button>\n        <button type=\"button\" class=\"btn btn-primary m-1\" onClick={Copytext}>Copy Text</button>\n        <button type=\"button\" class=\"btn btn-primary m-1\" onClick={ExportPdf}>Export to Pdf</button>\n\n        <div>\n          <h3>TextPreview</h3>\n          <h4>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</h4>\n        </div>\n      </div>\n      <footer>Copyright Â© 2021. GoText.</footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}